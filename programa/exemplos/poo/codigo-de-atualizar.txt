 int index = jTable1.getSelectedRow();
        if(jTable1.getSelectedRow() != -1){
            
            jTable1.setValueAt(jTextField1.getText(), jTable1.getSelectedRow() , 0);
            jTable1.setValueAt(jTextField2.getText(), jTable1.getSelectedRow() , 1);
            jTable1.setValueAt(jTextField3.getText(), jTable1.getSelectedRow() , 2);
            jTable1.setValueAt(jComboBox1.getSelectedItem(), jTable1.getSelectedRow(), 3);
            jTable1.setValueAt(jTextField4.getText(), jTable1.getSelectedRow() , 4);
          
            
            int codigo = Integer.parseInt(jTextField1.getText());
            String descricao = jTextField2.getText();
            int quantidadeEstoque = Integer.parseInt(jTextField3.getText());
            String unidadeMedida = (String) jComboBox1.getSelectedItem();
            double valor = Double.parseDouble(jTextField4.getText());
            
            Produto pr = new Produto();
            pr.setCodigo(codigo);
            pr.setDescricao(descricao);
            pr.setQuantidadeEstoque(quantidadeEstoque);
            pr.setUnidadeMedida(unidadeMedida);
            pr.setValor(valor);
            
            listaP.add(pr);
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jComboBox1.setSelectedIndex(0);
            
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um item para atualizar!", "Erro de Atualização", JOptionPane.ERROR_MESSAGE);
        }
        listaP.remove(index);
            
        modelo.removeRow(index);
        modelo.fireTableRowsDeleted(index, index); 
        this.updateTable();


jFormattedTextField1